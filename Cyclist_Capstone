install.packages("tidyverse")
install.packages("skimr")
install.packages("lubridate")
install.packages("janitor")
installed.packages("scales")
install.packages("mapview")
install.packages("data.table")
install.packages("dplyr")
install.packages("hms")
library(hms)
library(tidyverse)
library(skimr)
library(lubridate)
library(janitor)
library(scales)
library(mapview)
library(readr)
library(data.table)
library(dplyr)

#load the data frames
jul07_df <- read_csv("202106-divvy-tripdata.csv")
aug08_df <- read_csv("202107-divvy-tripdata.csv")
sep09_df <- read_csv("202108-divvy-tripdata.csv")
oct10_df <- read_csv("202109-divvy-tripdata.csv")
nov11_df <- read_csv("202110-divvy-tripdata.csv")
dec12_df <- read_csv("202111-divvy-tripdata.csv")
jan01_df <- read_csv("202112-divvy-tripdata.csv")
feb02_df <- read_csv("202201-divvy-tripdata.csv")
mar03_df <- read_csv("202202-divvy-tripdata.csv")
apr04_df <- read_csv("202203-divvy-tripdata.csv")
may05_df <- read_csv("202204-divvy-tripdata.csv")
jun06_df <- read_csv("202205-divvy-tripdata.csv")

#merge the data frames into one
cyclist_df <- rbind( jul07_df, aug08_df, sep09_df, oct10_df, nov11_df, dec12_df, jan01_df, feb02_df, mar03_df, apr04_df, may05_df, jun06_df)


#remove the individual data frames
remove( jul07_df, aug08_df, sep09_df, oct10_df, nov11_df, dec12_df, jan01_df, feb02_df, mar03_df, apr04_df, may05_df, jun06_df)


#remove all the nulls
clean_cyclist <- drop_na(cyclist_df)


# remove unnecessary columns  
clean_cyclist = subset(clean_cyclist, select = -c(start_lat,start_lng,end_lat, end_lng))

# add a column that calculates the ride length in minutes  
clean_cyclist$ride_lenght <- difftime(clean_cyclist$ended_at, clean_cyclist$started_at, units = "mins")
clean_cyclist$ride_lenght <- as.numeric(as.character(clean_cyclist$ride_lenght))

#add a new column for day of the week ( 1= Monday and 7= Sunday )
clean_cyclist$date <- as.Date(clean_cyclist$started_at) # start of the day 
clean_cyclist$day_of_week <- wday(clean_cyclist$started_at) # day of the week
clean_cyclist$day_of_week <- format(as.Date(clean_cyclist$date), "%A") # day of the week column 
clean_cyclist$month <- format(as.Date(clean_cyclist$date), "%m") # month column 
clean_cyclist$day <- format(as.Date(clean_cyclist$date), "%d") # day column 
clean_cyclist$year <- format(as.Date(clean_cyclist$date), "%y") # year column 
clean_cyclist$time <- format(as.Date(clean_cyclist$date), "%H:%M:%S")
clean_cyclist$time <- as_hms((clean_cyclist$started_at))
clean_cyclist$hour <- hour(clean_cyclist$time) # column for time


#remove duplicates 
clean_cyclist <- distinct(clean_cyclist)

#remove where ride_length is less than a minute
clean_cyclist <- clean_cyclist[!(clean_cyclist$ride_lenght <= 1),]

summary(clean_cyclist$ride_lenght)

filter(clean_cyclist, ride_lenght > 870000 & member_casual == "casual")
clean_cyclist <- clean_cyclist[!(clean_cyclist$ride_lenght > 870000 & clean_cyclist$member_casual =="casual"),]

#difference between casual and members 
aggregate(clean_cyclist$ride_lenght ~ clean_cyclist$member_casual, FUN = mean)
aggregate(clean_cyclist$ride_lenght ~ clean_cyclist$member_casual, FUN = median)
aggregate(clean_cyclist$ride_lenght ~ clean_cyclist$member_casual, FUN = max)
aggregate(clean_cyclist$ride_lenght ~ clean_cyclist$member_casual, FUN = min)

#average ride time per day casual vs member 
aggregate(clean_cyclist$ride_lenght ~ clean_cyclist$member_casual + clean_cyclist$day_of_week, FUN = mean)

# create new data frame for members vs casuals by weekday ,average duration, numbers of rides and ride type
member_casual_ridetype <- clean_cyclist %>%
  group_by(member_casual, day_of_week, rideable_type) %>%
  summarise(number_of_rides = n(), average_duration = mean(ride_lenght)) %>%
  arrange(member_casual, day_of_week)


#Viz on Number of rides by bike type through the week
clean_cyclist$day_of_week <- factor(clean_cyclist$day_of_week, levels = c("Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday"))
clean_cyclist%>%
  group_by(member_casual, day_of_week)%>%
  summarise(number_of_rides = n()
            ,average_duration= mean(ride_lenght))%>%
  arrange(member_casual, day_of_week)%>%
  ggplot(aes(x=day_of_week, y= number_of_rides, fill= member_casual))+
  geom_col(position = "dodge")+
  labs(title= "number of rides by ride type")



#pending
clean_cyclist %>%
  group_by(member_casual, hour) %>%
  summarise(number_of_rides = n()) %>%
  arrange(member_casual, hour) %>%
  ggplot(aes(x = hour, y = number_of_rides, color = member_casual)) +
  geom_line() +
  labs("text", title = 'Number of rides by hour of the day broken down to days')

clean_cyclist %>%
  group_by(member_casual, month) %>%
  summarise(number_of_rides = n()) %>%
  arrange(member_casual, month) %>%
  ggplot(aes(x = month, y = number_of_rides, fill = member_casual)) +
  geom_col(position = 'dodge') +
  labs("text", title = 'Number of rides by month')

clean_cyclist %>%
  group_by(member_casual, hour, day_of_week) %>%
  summarise(number_of_rides = n()) %>%
  arrange(member_casual, hour) %>%
  ggplot(aes(x = hour, y = number_of_rides, color = member_casual)) +
  geom_line() +
  facet_grid(~day_of_week ) +
  labs("text", title = 'Number of rides by hour of the day broken down to days')





